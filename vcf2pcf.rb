#! /usr/bin/env ruby
#this script is for vcf generated by sniffles
#sniffles output is as below:
#   #CHROM	POS	ID	REF	ALT	QUAL	FILTER	INFO	FORMAT	rel4-all.bam
#   chr1	564431	668	N	<TRA>	.	PASS	PRECISE;SVMETHOD=Snifflesv1.0.3;CHR2=chr12;END=41757454;STD_quant_start=2.695025;STD_quant_stop=3.471690;Kurtosis_quant_start=-0.015561;Kurtosis_quant_stop=-0.910005;SVTYPE=TRA;SUPTYPE=SR;SVLEN=1992118429;STRANDS=--;RE=38	GT:DR:DV	./.:.:38
#
#output example
#source_id,source_breakpoint,source_strand,target_id,target_breakpoint,target_strand,priority,svtype
#chr2,181265670,+,chr7,149006956,+,0,TRA,,,id1
#chr2,176643961,+,chr8,57149801,-,0,TRA,,,id2
#chr9,13643427,+,chr9,32391692,+,0,TRA,,,id3
#chr9,24354925,+,chr9,33924070,+,0,TRA,,,id4


if ARGV.size > 0 then
	File.open(ARGV[0], "r") do |f|
		filename = ARGV[0].split(".")[0]
		fileformat = f.gets
		while f.gets[0].strip == "#" do
			f.gets
		end
		if fileformat.split("v")[1].strip == "4.2" then ##vcf4.2. for snifles
			puts "source_id,source_breakpoint,source_strand,target_id,target_breakpoint,target_strand,priority,svtype,sequence"
			f.each_line do |line|
				from_chr = line.split("\t")[0]
				from_pos = line.split("\t")[1]
				info = line.split("\t")[7]
				to_chr = info.split(";")[2].split("=")[1]
				to_pos = info.split(";")[3].split("=")[1]
				svtype = info.split(";")[8].split("=")[1]
				svlen  = info.split(";")[10].split("=")[1]
				strand = info.split(";")[11].split("=")[1]
				strand_1 = strand.split("")[0]
				strand_2 = strand.split("")[1]
				insstring = info.split(";").find{|x| x.split("=")[0].eql?("SEQ")}
				priority = info.split(";").find{|x| x.split("=")[0].eql?("RE")}.split("=")[1]
				if insstring != nil then
					insstring = insstring.split("=")[1]
				end
				print from_chr, ",", from_pos, ",", strand_1, ",", to_chr, ",", to_pos, ",", strand_2, ",", priority, ",", svtype, ",", insstring, "\n"
				insstring = ""
			end
		end
	end
end